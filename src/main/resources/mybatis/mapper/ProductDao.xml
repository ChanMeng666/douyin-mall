<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qxy.dao.ProductDao">
    <resultMap id="ProductResultMap" type="com.qxy.model.po.ProductDO">
        <id column="product_id" property="productId" />
        <result column="name" property="name" />
        <result column="description" property="description" />
        <result column="price" property="price" />
        <result column="stock" property="stock" />
        <result column="created_at" property="createdAt" />
        <result column="updated_at" property="updatedAt" />
        <result column="image_url" property="imageUrl" />
        <result column="status" property="status"/>
    </resultMap>

    <select id="selectAll" resultMap="ProductResultMap">
        select * from products where status = 'active'
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="productId" keyColumn="product_id">
        insert into products (name, description, price, stock, image_url)
            values (#{name}, #{description}, #{price}, #{stock}, #{imageUrl})
    </insert>

    <select id="selectById" resultMap="ProductResultMap">
        select * from products where product_id = #{productId} and status = 'active'
    </select>

    <select id="selectByIds" resultMap="ProductResultMap">
        select * from products
        <where> product_id in
        <foreach collection="productId" open="(" close=")" item="id" separator=",">
            #{id}
        </foreach>
        and status = 'active'
        </where>
    </select>

    <select id="selectByName" resultMap="ProductResultMap">
        select * from products
        <where>
            name = #{name}
            and status = 'active'
        </where>
    </select>

    <update id="reduceProductStock">
        update products set stock = stock - #{quantity} 
        where product_id = #{productId} and stock >= #{quantity}
        and status = 'active'
    </update>

    <update id="updateProduct">
        update products
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="stock != null">
                stock = #{stock},
            </if>
            updated_at = #{updatedAt}
        </set>
        where product_id = #{productId}
    </update>

    <update id="deleteProduct">
        update products set status = 'inactive'
        where product_id = #{productId}
    </update>
</mapper>